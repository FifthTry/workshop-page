-- import: fifthtry.github.io/workshop-page as ws

-- boolean $what-are-component-completed: false
$always-include$: true

-- object what-are-component-object:
function: ls.set-boolean
variable: $what-are-component-completed

-- ws.understood what-are-component-button: Completed
$on-click$: toggle $what-are-component-completed
$on-click$: message-host $what-are-component-object
$chapter-status: $what-are-component-completed

-- ws.chapter: Booleans in FTD
id: ws-booleans
sidebar:true
button: what-are-component-button:
$status: $what-are-component-completed

-- ft.markdown:

We created a simple hello world message .
We could have done this in HTML as well. Where we differ from HTML is, if you
wanted to add a variable or define data, you would have to switch to JavaScript.
But we can do everything in FTD itself.

Unlike JavaScript and Python and other dynamically typed languages, {ft.highlight:
FTD is statically typed language}. All variables in FTD have a type, which must be
specified when the variable is constructed.


-- ft.code: This is how a boolean variable is created
lang: ftd

\-- boolean foo: true

-- ft.markdown:

We have created a `boolean` variable named `foo`, with an initial value of
`true`. A boolean variable can have only two values, `true` or `false`, and it
must be initialised with a value.

-- ft.h1: Conditional UI

We can use the `if` condition on a node to conditionally show a UI node:

-- ft.code: We get the value of a variable using `$open` syntax
lang: ftd

\-- ftd.text: open is true
if: $open

-- ft.markdown:

Only if the variable `open` is true only then text "open is true" would be
visible.


-- ft.h1: You Are Done

-- ft.markdown:

You have learnt how to define a boolean variable and use to control the UI.


-- container: ws-booleans.content-wrap.right-sidebar

-- ws.sidebar:

-- container: ws-booleans.content-wrap.right-sidebar-mobile

-- ws.sidebar:

